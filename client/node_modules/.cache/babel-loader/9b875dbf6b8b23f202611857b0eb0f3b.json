{"ast":null,"code":"import _classCallCheck from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/src/components/Jukebox.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/jukebox.css\";\n\nvar Jukebox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jukebox, _Component);\n\n  function Jukebox(props) {\n    var _this;\n\n    _classCallCheck(this, Jukebox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Jukebox).call(this, props));\n    var songs = [];\n    var preview_url = \"\";\n    var answer = 0;\n    _this.state = {\n      songs: songs,\n      preview_url: preview_url,\n      answer: answer\n    };\n    _this.getSpotify = _this.getSpotify.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playSong = _this.playSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.guessSong = _this.guessSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Jukebox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSpotify();\n    }\n  }, {\n    key: \"getSpotify\",\n    value: function getSpotify() {\n      var _this2 = this;\n\n      if (this.state.preview_url != \"\") {\n        this.state.preview_url.pause();\n      }\n\n      axios.get(\"/spotify-req\", {\n        params: {}\n      }).then(function (res) {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n\n        _this2.setState({\n          songs: res.data.songOptions,\n          answer: res.data.answer,\n          preview_url: new Audio(res.data.songOptions[res.data.answer].preview_url)\n        });\n      }).catch(function (err) {});\n    }\n  }, {\n    key: \"playSong\",\n    value: function playSong() {\n      //var a = new Audio(this.state.preview_url);\n      this.state.preview_url.play();\n    }\n  }, {\n    key: \"guessSong\",\n    value: function guessSong(guess) {\n      console.log(\"guess \" + guess);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"graph-go\",\n        onClick: this.getSpotify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Next\"), React.createElement(\"button\", {\n        id: \"graph-go\",\n        onClick: this.playSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Play Song\"), this.state.songs.map(function (song, index) {\n        return React.createElement(\"button\", {\n          key: index,\n          onClick: _this3.guessSong,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, song.name);\n      }));\n    }\n  }]);\n\n  return Jukebox;\n}(Component);\n\nexport default Jukebox;\n/*\nTest = ({ stations = [] }) => (\n  <div>\n    {stations.map(station => (\n      <div className=\"station\" key={station.call}>\n        {station.call}\n      </div>\n    ))}\n  </div>\n);*/\n\n/*\n\nclass Jukebox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n    this.getSpotify = this.getSpotify.bind(this);\n  }\n\n  getSpotify() {\n    axios\n      .get(\"/spotify-req\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n        console.log(\"it called a thing\");\n      })\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div id=\"juke\">\n        <button id=\"graph-go\" onClick={this.getSpotify}>\n          Start\n        </button>\n      </div>\n    );\n  }\n}*/\n//export default Jukebox;","map":{"version":3,"sources":["/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/src/components/Jukebox.js"],"names":["React","Component","axios","Jukebox","props","songs","preview_url","answer","state","getSpotify","bind","playSong","guessSong","pause","get","params","then","res","console","log","data","songOptions","setState","Audio","catch","err","play","guess","map","song","index","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,MAAM,GAAG,CAAf;AAEA,UAAKC,KAAL,GAAa;AAAEH,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,WAAW,EAAXA,WAAT;AAAsBC,MAAAA,MAAM,EAANA;AAAtB,KAAb;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,uDAAjB;AATiB;AAUlB;;;;wCAEmB;AAClB,WAAKD,UAAL;AACD;;;iCAEY;AAAA;;AACX,UAAI,KAAKD,KAAL,CAAWF,WAAX,IAA0B,EAA9B,EAAkC;AAChC,aAAKE,KAAL,CAAWF,WAAX,CAAuBO,KAAvB;AACD;;AAEDX,MAAAA,KAAK,CACFY,GADH,CACO,cADP,EACuB;AACnBC,QAAAA,MAAM,EAAE;AADW,OADvB,EAIGC,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,WAArB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASb,MAArB;;AACA,QAAA,MAAI,CAACe,QAAL,CAAc;AACZjB,UAAAA,KAAK,EAAEY,GAAG,CAACG,IAAJ,CAASC,WADJ;AAEZd,UAAAA,MAAM,EAAEU,GAAG,CAACG,IAAJ,CAASb,MAFL;AAGZD,UAAAA,WAAW,EAAE,IAAIiB,KAAJ,CACXN,GAAG,CAACG,IAAJ,CAASC,WAAT,CAAqBJ,GAAG,CAACG,IAAJ,CAASb,MAA9B,EAAsCD,WAD3B;AAHD,SAAd;AAOD,OAdH,EAeGkB,KAfH,CAeS,UAAAC,GAAG,EAAI,CAAE,CAflB;AAgBD;;;+BAEU;AACT;AACA,WAAKjB,KAAL,CAAWF,WAAX,CAAuBoB,IAAvB;AACD;;;8BAESC,K,EAAO;AACfT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWQ,KAAvB;AACD;;;6BACQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAKlB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAKE,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAOG,KAAKH,KAAL,CAAWH,KAAX,CAAiBuB,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP;AAAA,eACpB;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,OAAO,EAAE,MAAI,CAAClB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGiB,IAAI,CAACE,IADR,CADoB;AAAA,OAArB,CAPH,CADF;AAeD;;;;EAhEmB9B,S;;AAkEtB,eAAeE,OAAf;AAEA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"../styles/jukebox.css\";\n\nclass Jukebox extends Component {\n  constructor(props) {\n    super(props);\n    const songs = [];\n    const preview_url = \"\";\n    const answer = 0;\n\n    this.state = { songs, preview_url, answer };\n    this.getSpotify = this.getSpotify.bind(this);\n    this.playSong = this.playSong.bind(this);\n    this.guessSong = this.guessSong.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSpotify();\n  }\n\n  getSpotify() {\n    if (this.state.preview_url != \"\") {\n      this.state.preview_url.pause();\n    }\n\n    axios\n      .get(\"/spotify-req\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n        this.setState({\n          songs: res.data.songOptions,\n          answer: res.data.answer,\n          preview_url: new Audio(\n            res.data.songOptions[res.data.answer].preview_url\n          )\n        });\n      })\n      .catch(err => {});\n  }\n\n  playSong() {\n    //var a = new Audio(this.state.preview_url);\n    this.state.preview_url.play();\n  }\n\n  guessSong(guess) {\n    console.log(\"guess \" + guess);\n  }\n  render() {\n    return (\n      <div>\n        <button id=\"graph-go\" onClick={this.getSpotify}>\n          Next\n        </button>\n        <button id=\"graph-go\" onClick={this.playSong}>\n          Play Song\n        </button>\n        {this.state.songs.map((song, index) => (\n          <button key={index} onClick={this.guessSong}>\n            {song.name}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Jukebox;\n\n/*\nTest = ({ stations = [] }) => (\n  <div>\n    {stations.map(station => (\n      <div className=\"station\" key={station.call}>\n        {station.call}\n      </div>\n    ))}\n  </div>\n);*/\n\n/*\n\nclass Jukebox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n    this.getSpotify = this.getSpotify.bind(this);\n  }\n\n  getSpotify() {\n    axios\n      .get(\"/spotify-req\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n        console.log(\"it called a thing\");\n      })\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div id=\"juke\">\n        <button id=\"graph-go\" onClick={this.getSpotify}>\n          Start\n        </button>\n      </div>\n    );\n  }\n}*/\n\n//export default Jukebox;\n"]},"metadata":{},"sourceType":"module"}