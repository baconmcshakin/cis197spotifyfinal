{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/src/components/Jukebox.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/jukebox.css\";\nvar colors = [\"#146ACF\", \"#448CDF\", \"#6199DA\", \"#80B4F0\"];\n\nvar Jukebox = function Jukebox(_ref) {\n  var _ref$dataItem = _ref.dataItem,\n      dataItem = _ref$dataItem === void 0 ? [] : _ref$dataItem,\n      contentType = _ref.contentType;\n\n  if (contentType === \"articles\") {\n    return React.createElement(\"section\", {\n      id: \"top-four-cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, dataItem.slice(0, 4).map(function (card, index) {\n      return React.createElement(\"div\", {\n        key: index.toString(),\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          backgroundColor: colors[index]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/articlepage/\" + encodeURI(card.conversation_id),\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, card.title)), React.createElement(\"div\", {\n        className: \"bottom-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, (card.main_metric * 1).toLocaleString(\"en\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"amount-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, store.getState().homePageReducer.sortType))))))));\n    }));\n  }\n\n  var normalizedData = [];\n\n  if (store.getState().homePageReducer.sortType === \"watsonscore\") {\n    normalizedData = watsonNormalize(dataItem);\n  }\n\n  return React.createElement(\"section\", {\n    id: \"top-four-cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, dataItem.slice(0, 4).map(function (card, index) {\n    return React.createElement(\"div\", {\n      key: index.toString(),\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        backgroundColor: colors[index]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/tagpage/\" + encodeURI(card.name),\n      style: {\n        textDecoration: \"none\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, card.name)), React.createElement(\"div\", {\n      className: \"bottom-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, store.getState().homePageReducer.sortType === \"watsonscore\" ? normalizedData[index] : card.main_metric)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"amount-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, getMetricType(store.getState().homePageReducer.sortType)))))))));\n  }));\n};\n/*\n\n\n\n\n\nclass Jukebox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n    this.getSpotify = this.getSpotify.bind(this);\n  }\n\n  getSpotify() {\n    axios\n      .get(\"/spotify-req\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n        console.log(\"it called a thing\");\n      })\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div id=\"juke\">\n        <button id=\"graph-go\" onClick={this.getSpotify}>\n          Start\n        </button>\n      </div>\n    );\n  }\n}*/\n\n\nexport default Jukebox;","map":{"version":3,"sources":["/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/src/components/Jukebox.js"],"names":["React","Component","axios","colors","Jukebox","dataItem","contentType","slice","map","card","index","toString","backgroundColor","encodeURI","conversation_id","textDecoration","color","title","main_metric","toLocaleString","store","getState","homePageReducer","sortType","normalizedData","watsonNormalize","name","getMetricType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"../styles/jukebox.css\";\n\nconst colors = [\"#146ACF\", \"#448CDF\", \"#6199DA\", \"#80B4F0\"];\n\nconst Jukebox = ({ dataItem = [], contentType }) => {\n  if (contentType === \"articles\") {\n    return (\n      <section id=\"top-four-cards\">\n        {dataItem.slice(0, 4).map((card, index) => (\n          <div key={index.toString()} className=\"col-md-3\">\n            <div className=\"card\" style={{ backgroundColor: colors[index] }}>\n              <Link\n                to={\"/articlepage/\" + encodeURI(card.conversation_id)}\n                style={{ textDecoration: \"none\", color: \"white\" }}\n              >\n                <div className=\"details\">\n                  <div className=\"col-md-9\">\n                    <div className=\"top-details\">\n                      <span className=\"name\">{card.title}</span>\n                    </div>\n                    <div className=\"bottom-details\">\n                      <div className=\"amount\">\n                        <span className=\"number\">\n                          {(card.main_metric * 1).toLocaleString(\"en\")}\n                        </span>\n                      </div>\n                      <div>\n                        <span className=\"amount-type\">\n                          {store.getState().homePageReducer.sortType}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </section>\n    );\n  }\n\n  var normalizedData = [];\n  if (store.getState().homePageReducer.sortType === \"watsonscore\") {\n    normalizedData = watsonNormalize(dataItem);\n  }\n  return (\n    <section id=\"top-four-cards\">\n      {dataItem.slice(0, 4).map((card, index) => (\n        <div key={index.toString()} className=\"col-md-3\">\n          <div className=\"card\" style={{ backgroundColor: colors[index] }}>\n            <Link\n              to={\"/tagpage/\" + encodeURI(card.name)}\n              style={{ textDecoration: \"none\", color: \"white\" }}\n            >\n              <div className=\"details\">\n                <div className=\"col-md-9\">\n                  <div className=\"top-details\">\n                    <span className=\"name\">{card.name}</span>\n                  </div>\n                  <div className=\"bottom-details\">\n                    <div className=\"amount\">\n                      <span className=\"number\">\n                        {store.getState().homePageReducer.sortType ===\n                        \"watsonscore\"\n                          ? normalizedData[index]\n                          : card.main_metric}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"amount-type\">\n                        {getMetricType(\n                          store.getState().homePageReducer.sortType\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n};\n\n/*\n\n\n\n\n\nclass Jukebox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n    this.getSpotify = this.getSpotify.bind(this);\n  }\n\n  getSpotify() {\n    axios\n      .get(\"/spotify-req\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n        console.log(\"it called a thing\");\n      })\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div id=\"juke\">\n        <button id=\"graph-go\" onClick={this.getSpotify}>\n          Start\n        </button>\n      </div>\n    );\n  }\n}*/\n\nexport default Jukebox;\n"]},"metadata":{},"sourceType":"module"}