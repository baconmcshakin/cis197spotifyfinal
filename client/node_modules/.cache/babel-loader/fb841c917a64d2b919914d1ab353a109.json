{"ast":null,"code":"import _defineProperty from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/src/components/Jukebox.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport \"../styles/jukebox.css\";\nimport \"../styles/header.css\";\nimport \"../styles/instructions.css\";\nvar customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nvar Jukebox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jukebox, _Component);\n\n  function Jukebox(props) {\n    var _this;\n\n    _classCallCheck(this, Jukebox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Jukebox).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    var songs = [];\n    var preview_url = \"\";\n    var answer = 0;\n    var score = 0;\n    var name = \"\";\n    var modalIsOpen = false;\n    var songPlaying = false;\n    var leaderboard = [];\n    _this.state = {\n      songs: songs,\n      preview_url: preview_url,\n      answer: answer,\n      score: score,\n      modalIsOpen: modalIsOpen,\n      name: name,\n      leaderboard: leaderboard,\n      songPlaying: songPlaying\n    };\n    _this.getSpotify = _this.getSpotify.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playSong = _this.playSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.guessSong = _this.guessSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.gameOver = _this.gameOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLeaderboard = _this.getLeaderboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Jukebox, [{\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n      this.subtitle.style.color = \"#f00\";\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSpotify();\n      this.getLeaderboard();\n    }\n  }, {\n    key: \"getSpotify\",\n    value: function getSpotify() {\n      var _this2 = this;\n\n      if (this.state.preview_url != \"\") {\n        this.state.preview_url.pause();\n      }\n\n      axios.get(\"/spotify-req\", {\n        params: {}\n      }).then(function (res) {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n\n        _this2.setState({\n          songs: res.data.songOptions,\n          answer: res.data.answer,\n          preview_url: new Audio(res.data.songOptions[res.data.answer].preview_url)\n        });\n      }).catch(function (err) {});\n    }\n  }, {\n    key: \"playSong\",\n    value: function playSong() {\n      //var a = new Audio(this.state.preview_url);\n      this.state.preview_url.play();\n    }\n  }, {\n    key: \"gameOver\",\n    value: function gameOver() {\n      var _this3 = this;\n\n      this.closeModal();\n      console.log(this.state.name);\n      axios.post(\"/api/leaderboard/post-score\", {\n        params: {\n          username: this.state.name,\n          score: this.state.score\n        }\n      }).then(function (res) {\n        console.log(\"successful\");\n\n        _this3.setState({\n          score: 0\n        });\n\n        _this3.getLeaderboard();\n\n        _this3.getSpotify();\n      }).catch(function (err) {}); // AXIOS PUT NAME AND SCORE INTO DB\n    }\n  }, {\n    key: \"getLeaderboard\",\n    value: function getLeaderboard() {\n      var _this4 = this;\n\n      ///get-leaderboard\n      axios.get(\"/api/leaderboard/get-leaderboard\", {\n        params: {}\n      }).then(function (res) {\n        console.log(\"got it\");\n        console.log(res);\n\n        _this4.setState({\n          leaderboard: res.data.leaderboardData\n        });\n      }).catch(function (err) {});\n    }\n  }, {\n    key: \"guessSong\",\n    value: function guessSong(guess) {\n      console.log(\"guess \" + guess);\n\n      if (guess == this.state.answer) {\n        console.log(\"YOU GUESSED CORRECT! +1\");\n        this.setState({\n          score: this.state.score + 1\n        });\n        this.getSpotify();\n      } else {\n        console.log(\"WRONG!!!\");\n        this.setState({\n          score: this.state.score - 0.5\n        });\n        this.getSpotify();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"JUKEBOX\"), React.createElement(\"div\", {\n        className: \"rightside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Score: \", this.state.score)))), React.createElement(\"div\", {\n        id: \"instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"welcome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Welcome to Jukebox!\"), React.createElement(\"div\", {\n        id: \"rules\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"rulespan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"The rules are simple: Press the play button on the preview of a song, and try to guess what song it is by clicking on one of the multiple choice options! If you guess correct, you get a point. If you're wrong, you lose 0.5 points. When you're done playing, hit the 'Game Over' button to submit your score to the leaderboard!\"))), React.createElement(\"div\", {\n        id: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"play\",\n        onClick: this.playSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Play Song\"), React.createElement(\"button\", {\n        id: \"skip\",\n        onClick: this.getSpotify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Skip\")), React.createElement(\"div\", {\n        id: \"buttonOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.songs.map(function (song, index) {\n        return React.createElement(\"div\", {\n          className: \"options\",\n          key: index,\n          onClick: function onClick() {\n            return _this5.guessSong(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          id: \"songname\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"\\\"\", song.name, \"\\\"\"), React.createElement(\"span\", {\n          id: \"artist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, song.artists[0].name));\n      })), React.createElement(\"button\", {\n        id: \"gameover\",\n        onClick: this.openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Game Over\"), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this5.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"You scored: \", this.state.score), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Please enter your name\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this5.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.gameOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"section\", {\n        id: \"statTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"statDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"table-nicknames-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Nicknames\"), React.createElement(\"th\", {\n        className: \"table-scores-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Scores\")), this.state.leaderboard.slice(0, 100).map(function (highscore, index) {\n        return React.createElement(\"tr\", {\n          key: index.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"table-names\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, highscore.username), React.createElement(\"td\", {\n          className: \"table-scores\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, highscore.score));\n      }))))));\n    }\n  }]);\n\n  return Jukebox;\n}(Component);\n\nexport default Jukebox;","map":{"version":3,"sources":["/Users/Ethan/Desktop/CIS 197 FINAL PROJECT/client/src/components/Jukebox.js"],"names":["React","Component","axios","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","Jukebox","props","handleChange","e","setState","target","name","value","songs","preview_url","answer","score","modalIsOpen","songPlaying","leaderboard","state","getSpotify","bind","playSong","guessSong","gameOver","openModal","afterOpenModal","closeModal","getLeaderboard","subtitle","style","color","pause","get","params","then","res","console","log","data","songOptions","Audio","catch","err","play","post","username","leaderboardData","guess","map","song","index","artists","slice","highscore","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nimport \"../styles/jukebox.css\";\nimport \"../styles/header.css\";\nimport \"../styles/instructions.css\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nclass Jukebox extends Component {\n  constructor(props) {\n    super(props);\n    const songs = [];\n    const preview_url = \"\";\n    const answer = 0;\n    var score = 0;\n    var name = \"\";\n    var modalIsOpen = false;\n    var songPlaying = false;\n\n    var leaderboard = [];\n\n    this.state = {\n      songs,\n      preview_url,\n      answer,\n      score,\n      modalIsOpen,\n      name,\n      leaderboard,\n      songPlaying\n    };\n    this.getSpotify = this.getSpotify.bind(this);\n    this.playSong = this.playSong.bind(this);\n    this.guessSong = this.guessSong.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n    this.getLeaderboard = this.getLeaderboard.bind(this);\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = \"#f00\";\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  componentDidMount() {\n    this.getSpotify();\n    this.getLeaderboard();\n  }\n\n  getSpotify() {\n    if (this.state.preview_url != \"\") {\n      this.state.preview_url.pause();\n    }\n\n    axios\n      .get(\"/spotify-req\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(res.data.songOptions);\n        console.log(res.data.answer);\n        this.setState({\n          songs: res.data.songOptions,\n          answer: res.data.answer,\n          preview_url: new Audio(\n            res.data.songOptions[res.data.answer].preview_url\n          )\n        });\n      })\n      .catch(err => {});\n  }\n\n  playSong() {\n    //var a = new Audio(this.state.preview_url);\n    this.state.preview_url.play();\n  }\n\n  gameOver() {\n    this.closeModal();\n    console.log(this.state.name);\n\n    axios\n      .post(\"/api/leaderboard/post-score\", {\n        params: { username: this.state.name, score: this.state.score }\n      })\n      .then(res => {\n        console.log(\"successful\");\n        this.setState({\n          score: 0\n        });\n        this.getLeaderboard();\n        this.getSpotify();\n      })\n      .catch(err => {});\n\n    // AXIOS PUT NAME AND SCORE INTO DB\n  }\n\n  getLeaderboard() {\n    ///get-leaderboard\n    axios\n      .get(\"/api/leaderboard/get-leaderboard\", {\n        params: {}\n      })\n      .then(res => {\n        console.log(\"got it\");\n        console.log(res);\n\n        this.setState({\n          leaderboard: res.data.leaderboardData\n        });\n      })\n      .catch(err => {});\n  }\n\n  guessSong(guess) {\n    console.log(\"guess \" + guess);\n    if (guess == this.state.answer) {\n      console.log(\"YOU GUESSED CORRECT! +1\");\n      this.setState({ score: this.state.score + 1 });\n      this.getSpotify();\n    } else {\n      console.log(\"WRONG!!!\");\n      this.setState({ score: this.state.score - 0.5 });\n      this.getSpotify();\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div id=\"navbar\">\n          <nav>\n            <span className=\"navname\">JUKEBOX</span>\n            <div className=\"rightside\">\n              <span className=\"score\">Score: {this.state.score}</span>\n            </div>\n          </nav>\n        </div>\n\n        <div id=\"instructions\">\n          <h1 id=\"welcome\">Welcome to Jukebox!</h1>\n          <div id=\"rules\">\n            <span id=\"rulespan\">\n              The rules are simple: Press the play button on the preview of a\n              song, and try to guess what song it is by clicking on one of the\n              multiple choice options! If you guess correct, you get a point. If\n              you're wrong, you lose 0.5 points. When you're done playing, hit\n              the 'Game Over' button to submit your score to the leaderboard!\n            </span>\n          </div>\n        </div>\n\n        <div id=\"controls\">\n          <button id=\"play\" onClick={this.playSong}>\n            Play Song\n          </button>\n          <button id=\"skip\" onClick={this.getSpotify}>\n            Skip\n          </button>\n        </div>\n\n        <div id=\"buttonOptions\">\n          {this.state.songs.map((song, index) => (\n            <div\n              className=\"options\"\n              key={index}\n              onClick={() => this.guessSong(index)}\n            >\n              <span id=\"songname\">\"{song.name}\"</span>\n              <span id=\"artist\">{song.artists[0].name}</span>\n            </div>\n          ))}\n        </div>\n\n        <button id=\"gameover\" onClick={this.openModal}>\n          Game Over\n        </button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2 ref={subtitle => (this.subtitle = subtitle)}>\n            You scored: {this.state.score}\n          </h2>\n          <div>Please enter your name</div>\n          <form>\n            <input\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </form>\n          <button onClick={this.gameOver}>Submit</button>\n        </Modal>\n\n        <section id=\"statTable\">\n          <div id=\"statDiv\">\n            <table id=\"stats\">\n              <tbody>\n                <tr>\n                  <th className=\"table-nicknames-h\">Nicknames</th>\n                  <th className=\"table-scores-h\">Scores</th>\n                </tr>\n                {this.state.leaderboard\n                  .slice(0, 100)\n                  .map((highscore, index) => (\n                    <tr key={index.toString()}>\n                      <td className=\"table-names\">{highscore.username}</td>\n                      <td className=\"table-scores\">{highscore.score}</td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\nexport default Jukebox;\n"]},"metadata":{},"sourceType":"module"}